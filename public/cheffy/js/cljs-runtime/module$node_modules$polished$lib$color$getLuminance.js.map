{
"version":3,
"file":"module$node_modules$polished$lib$color$getLuminance.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHA,OAAAC,WAAA,CAAqB,CAAA,CACrBD,QAAAE,QAAA,CAAkB,IAAK,EAEvB,KAAIC,YAMJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAJ,WAAP,CAAwBI,GAAxB,CAA8B,CAAEH,QAASG,GAAX,CAAvC,CAJrC,CAEAP,OAAA,CAAQ,mDAAR,CAFA,CA+CAE,QAAAE,QAAA,CAfAI,QAAqB,CAACC,KAAD,CAAQ,CAC3B,IAAIC,SAAW,CAAC,CAAA,CAAGL,WAAAD,QAAJ,EAAyBK,KAAzB,CAEXE,MAAAA,CAAmBC,MAAAC,KAAA,CAAYH,QAAZ,CAAAI,IAAA,CAA0B,QAAS,CAACC,GAAD,CAAM,CAC1DC,GAAAA,CAAUN,QAAA,CAASK,GAAT,CAAVC,CAA0B,GAC9B,OAAkB,MAAX,EAAAA,GAAA,CAAqBA,GAArB,CAA+B,KAA/B,CAAuCC,IAAAC,IAAA,EAAUF,GAAV,CAAoB,IAApB,EAA6B,KAA7B,CAAoC,GAApC,CAFgB,CAAzC,CAQvB,OAAOG,WAAA,CAAWC,CAAC,KAADA;AAJVT,KAAAU,CAAiB,CAAjBA,CAIUD,CAAc,KAAdA,CAHVT,KAAAW,CAAiB,CAAjBA,CAGUF,CAA2B,KAA3BA,CAFVT,KAAAY,CAAiB,CAAjBA,CAEUH,SAAA,CAA+C,CAA/C,CAAX,CAXoB,CAgB7BnB,OAAAC,QAAA,CAAiBA,OAAAE,QAxD+F;",
"sources":["node_modules/polished/lib/color/getLuminance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$color$getLuminance\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parseToRgb =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"./parseToRgb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a number (float) representing the luminance of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',\n *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)',\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};\n *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)'};\n *\n * // CSS in JS Output\n *\n * div {\n *   background: \"#CCCD64\";\n *   background: \"rgba(58, 133, 255, 1)\";\n * }\n */\nfunction getLuminance(color) {\n  var rgbColor = (0, _parseToRgb.default)(color);\n\n  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {\n    var channel = rgbColor[key] / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }),\n      r = _Object$keys$map[0],\n      g = _Object$keys$map[1],\n      b = _Object$keys$map[2];\n\n  return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b).toFixed(3));\n}\n\nvar _default = getLuminance;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","_parseToRgb","_interopRequireDefault","obj","getLuminance","color","rgbColor","_Object$keys$map","Object","keys","map","key","channel","Math","pow","parseFloat","toFixed","r","g","b"]
}
