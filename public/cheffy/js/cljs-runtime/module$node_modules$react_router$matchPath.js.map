{
"version":3,
"file":"module$node_modules$react_router$matchPath.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvGA,OAAAC,WAAA,CAAqB,CAAA,CAIrB,KAAIC,eAE0C,CAJ1CC,MAI0C,CAJ1BL,OAAA,CAAQ,0CAAR,CAI0B,GAFFK,MAESF,WAAP,CAFFE,MAEE,CAA8B,CAAEC,QAFlCD,MAEgC,CAF5E,CAIIE,aAAe,EAJnB,CAMIC,WAAa,CANjB,CAQIC,YAAcA,QAAoB,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACvD,IAAIC,SAAW,EAAXA,CAAgBD,OAAAE,IAAhBD,CAA8BD,OAAAG,OAA9BF,CAA+CD,OAAAI,UAC/CC,SAAAA,CAAQT,YAAA,CAAaK,QAAb,CAARI,GAAmCT,YAAA,CAAaK,QAAb,CAAnCI,CAA4D,EAA5DA,CAEJ,IAAIA,QAAA,CAAMN,OAAN,CAAJ,CAAoB,MAAOM,SAAA,CAAMN,OAAN,CAE3B,KAAIO,KAAO,EAEPC,QAAAA,CAAkB,CAAEC,GADfA,CAAC,CAAA;AAAGf,cAAAE,QAAJa,EAA4BT,OAA5BS,CAAqCF,IAArCE,CAA2CR,OAA3CQ,CACa,CAAUF,KAAMA,IAAhB,CAXPG,IAaf,CAAIZ,UAAJ,GACEQ,QAAA,CAAMN,OAAN,CACA,CADiBQ,OACjB,CAAAV,UAAA,EAFF,CAKA,OAAOU,QAfgD,CAiEzDhB,QAAAI,QAAA,CA5CgBe,QAAkB,CAACC,QAAD,CAAW,CAC3C,IAAIX,QAA6B,CAAnB,CAAAY,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAAlF,CACIG,OAASH,SAAA,CAAU,CAAV,CAEU,SAAvB,GAAI,MAAOZ,QAAX,GAAiCA,OAAjC,CAA2C,CAAEgB,KAAMhB,OAAR,CAA3C,CAJ2C,KAMvCiB,SAAWjB,OACXgB,QAAAA,CAAOC,QAAAD,KAPgC,KAQvCE,eAAiBD,QAAAE,MACjBA,eAAAA,CAA2BL,IAAAA,EAAnB,GAAAI,cAAA,CAA+B,CAAA,CAA/B,CAAuCA,cATR,KAUvCE,gBAAkBH,QAAAd,OAElBkB,SAAAA,CAAqBJ,QAAAb,UAIzB;GAAY,IAAZ,EAAIY,OAAJ,CAAkB,MAAOD,OAErBO,SAAAA,CAAexB,WAAA,CAAYkB,OAAZ,CAAkB,CAAEd,IAAKiB,cAAP,CAAchB,OAPlBW,IAAAA,EAApBX,GAAAiB,eAAAjB,CAAgC,CAAA,CAAhCA,CAAwCiB,eAOhB,CAA8BhB,UAL5BU,IAAAA,EAAvBV,GAAAiB,QAAAjB,CAAmC,CAAA,CAAnCA,CAA2CiB,QAKtB,CAAlB,CAEff,OAAAA,CAAOgB,QAAAhB,KAEPiB,gBAAAA,CAHKD,QAAAd,GAGGgB,KAAA,CAAQb,QAAR,CAEZ,IAAI,CAACY,eAAL,CAAY,MAAO,KAEfE,SAAAA,CAAMF,eAAA,CAAM,CAAN,CAAV,KACIG,OAASH,eAAAI,MAAA,CAAY,CAAZ,CAETC,gBAAAA,CAAUjB,QAAViB,GAAuBH,QAE3B,OAAIN,eAAJ,EAAa,CAACS,eAAd,CAA8B,IAA9B,CAEO,CACLZ,KAAMA,OADD,CAELS,IAAc,GAAT,GAAAT,OAAA,EAAwB,EAAxB,GAAgBS,QAAhB,CAA6B,GAA7B,CAAmCA,QAFnC,CAGLG,QAASA,eAHJ,CAILC,OAAQvB,MAAAwB,OAAA,CAAY,QAAS,CAACC,IAAD;AAAOC,GAAP,CAAYC,KAAZ,CAAmB,CAC9CF,IAAA,CAAKC,GAAAE,KAAL,CAAA,CAAiBR,MAAA,CAAOO,KAAP,CACjB,OAAOF,KAFuC,CAAxC,CAGL,EAHK,CAJH,CAjCoC,CApC0D;",
"sources":["node_modules/react-router/matchPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_router$matchPath\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _pathToRegexp = require(\"path-to-regexp\");\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var keys = [];\n  var re = (0, _pathToRegexp2.default)(pattern, keys, options);\n  var compiledPattern = { re: re, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n\n  if (typeof options === \"string\") options = { path: options };\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexports.default = matchPath;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","_pathToRegexp2","_pathToRegexp","default","patternCache","cacheCount","compilePath","pattern","options","cacheKey","end","strict","sensitive","cache","keys","compiledPattern","re","cacheLimit","matchPath","pathname","arguments","length","undefined","parent","path","_options","_options$exact","exact","_options$strict","_options$sensitive","_compilePath","match","exec","url","values","slice","isExact","params","reduce","memo","key","index","name"]
}
