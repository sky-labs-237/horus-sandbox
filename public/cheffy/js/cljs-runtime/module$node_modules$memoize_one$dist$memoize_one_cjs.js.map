{
"version":3,
"file":"module$node_modules$memoize_one$dist$memoize_one_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,QAASA,eAAc,CAACC,SAAD,CAAYC,UAAZ,CAAwB,CAC7C,GAAID,SAAAE,OAAJ,GAAyBD,UAAAC,OAAzB,CACE,MAAO,CAAA,CAGT,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,SAAAE,OAApB,CAAsCC,CAAA,EAAtC,CACE,GAAIH,SAAA,CAAUG,CAAV,CAAJ,GAAqBF,UAAA,CAAWE,CAAX,CAArB,CACE,MAAO,CAAA,CAIX,OAAO,CAAA,CAXsC,CA2C/CN,MAAAC,QAAA,CA7BAM,QAAmB,CAACC,QAAD,CAAWC,OAAX,CAAoB,CACrB,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACYP,cADZ,CAIA,KAAIQ,QAAJ,CACIC,SAAW,EADf,CAEIC,UAFJ,CAGIC,WAAa,CAAA,CAkBjB,OAhBaC,SAAiB,EAAG,CAC/B,IAD+B,IACtBC,KAAOC,SAAAX,OADe,CACGY,QAAcC,KAAJ,CAAUH,IAAV,CADb,CAC8BI,KAAO,CAApE,CAAuEA,IAAvE;AAA8EJ,IAA9E,CAAoFI,IAAA,EAApF,CACEF,OAAA,CAAQE,IAAR,CAAA,CAAgBH,SAAA,CAAUG,IAAV,CAGlB,IAAIN,UAAJ,EAAkBH,QAAlB,GAA+B,IAA/B,EAAuCD,OAAA,CAAQQ,OAAR,CAAiBN,QAAjB,CAAvC,CACE,MAAOC,WAGTA,WAAA,CAAaJ,QAAAY,MAAA,CAAe,IAAf,CAAqBH,OAArB,CACbJ,WAAA,CAAa,CAAA,CACbH,SAAA,CAAW,IACXC,SAAA,CAAWM,OACX,OAAOL,WAbwB,CAVI,CAjB0E;",
"sources":["node_modules/memoize-one/dist/memoize-one.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$memoize_one$dist$memoize_one_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function memoized() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nmodule.exports = memoizeOne;\n\n};"],
"names":["shadow$provide","global","require","module","exports","areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","result","_len","arguments","newArgs","Array","_key","apply"]
}
