{
"version":3,
"file":"module$node_modules$jss$lib$sheets.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/FC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAIIC,OAAAA,CAAkBN,OAAA,CAAQ,4CAAR,CAYtBE,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAI,CAVqBI,MAEAC,EAFAD,MAEOE,WAAPD,CAFAD,MAEAC,CAA8B,CAAE,UAFhCD,MAE8B,CAQnD,EAAiB,SAAjB,CAnBsE;",
"sources":["node_modules/jss/lib/sheets.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jss$lib$sheets\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SheetsRegistry = require('./SheetsRegistry');\n\nvar _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * This is a global sheets registry. Only DomRenderer will add sheets to it.\n * On the server one should use an own SheetsRegistry instance and add the\n * sheets to it, because you need to make sure to create a new registry for\n * each request in order to not leak sheets across requests.\n */\nexports['default'] = new _SheetsRegistry2['default']();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_SheetsRegistry","_SheetsRegistry2","__esModule"]
}
