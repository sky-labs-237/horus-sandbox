{
"version":3,
"file":"module$node_modules$$material_ui$core$styles$colorManipulator.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@material-ui/core/styles/colorManipulator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$material_ui$core$styles$colorManipulator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertHexToRGB = convertHexToRGB;\nexports.rgbToHex = rgbToHex;\nexports.decomposeColor = decomposeColor;\nexports.recomposeColor = recomposeColor;\nexports.getContrastRatio = getContrastRatio;\nexports.getLuminance = getLuminance;\nexports.emphasize = emphasize;\nexports.fade = fade;\nexports.darken = darken;\nexports.lighten = lighten;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(value >= min && value <= max, \"Material-UI: the value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\")) : void 0;\n\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nfunction convertHexToRGB(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length / 3, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb(\".concat(colors.map(function (n) {\n    return parseInt(n, 16);\n  }).join(', '), \")\") : '';\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nfunction rgbToHex(color) {\n  // Pass hex straight through\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  function intToHex(c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? \"0\".concat(hex) : hex;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  values = values.map(function (n) {\n    return intToHex(n);\n  });\n  return \"#\".concat(values.join(''));\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\n\nfunction decomposeColor(color) {\n  if (color.charAt(0) === '#') {\n    return decomposeColor(convertHexToRGB(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n      throw new Error([\"Material-UI: unsupported `\".concat(color, \"` color.\"), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\\n'));\n    }\n  }\n\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\n\nfunction recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  }\n\n  if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(color.type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\n\nfunction getLuminance(color) {\n  var decomposedColor = decomposeColor(color);\n\n  if (decomposedColor.type.indexOf('rgb') !== -1) {\n    var rgb = decomposedColor.values.map(function (val) {\n      val /= 255; // normalized\n\n      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n    }); // Truncate at 3 digits\n\n    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n  } // else if (decomposedColor.type.indexOf('hsl') !== -1)\n\n\n  return decomposedColor.values[2] / 100;\n}\n/**\n * Darken or lighten a colour, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction fade(color, value) {\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(color, \"Material-UI: missing color argument in fade(\".concat(color, \", \").concat(value, \").\")) : void 0;\n  if (!color) return color;\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction darken(color, coefficient) {\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(color, \"Material-UI: missing color argument in darken(\".concat(color, \", \").concat(coefficient, \").\")) : void 0;\n  if (!color) return color;\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction lighten(color, coefficient) {\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(color, \"Material-UI: missing color argument in lighten(\".concat(color, \", \").concat(coefficient, \").\")) : void 0;\n  if (!color) return color;\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","clamp","value","min","arguments","length","undefined","max","_warning","default","concat","convertHexToRGB","color","substr","re","RegExp","colors","match","map","n","parseInt","join","decomposeColor","charAt","marker","indexOf","type","substring","values","split","parseFloat","Error","recomposeColor","i","getLuminance","decomposedColor","rgb","val","Math","pow","Number","toFixed","darken","coefficient","lighten","_interopRequireDefault","Object","defineProperty","rgbToHex","_decomposeColor","hex","toString","getContrastRatio","foreground","background","lumA","lumB","emphasize","fade"]
}
