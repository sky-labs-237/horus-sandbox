{
"version":3,
"file":"module$node_modules$polished$lib$mixins$fontFace.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAM7GC,QAASA,uBAAsB,CAACC,YAAD,CAAeC,WAAf,CAA4B,CAIzD,MAHyBA,YAAAC,IAAAC,CAAgB,QAAS,CAACC,MAAD,CAAS,CACzD,MAAO,OAAP,CAAkBJ,YAAlB,CAAiC,GAAjC,CAAuCI,MAAvC,CAAgD,IADS,CAAlCD,CAGlBE,KAAA,CAAwB,IAAxB,CAJkD,CAO3DC,QAASA,wBAAuB,CAACC,UAAD,CAAa,CAI3C,MAH0BA,WAAAL,IAAAM,CAAe,QAAS,CAACC,IAAD,CAAO,CACvD,MAAO,SAAP,CAAoBA,IAApB,CAA2B,IAD4B,CAA/BD,CAGnBH,KAAA,CAAyB,IAAzB,CAJoC,CAV7CP,OAAAY,WAAA,CAAqB,CAAA,CACrBZ,QAAAa,QAAA,CAAkB,IAAK,EAuGvBb,QAAAa,QAAA,CAhDAC,QAAiB,CAACC,IAAD,CAAO,CAAA,IAClBC,WAAaD,IAAAC,WADK,CAElBd,aAAea,IAAAb,aAFG;AAGlBe,YAAcF,IAAAE,YAHI,CAIlBC,UAAYH,IAAAG,UAJM,CAKlBC,YAAcJ,IAAAI,YALI,CAMlBC,WAAaL,IAAAK,WANK,CAOlBC,iBAAmBN,IAAAZ,YAPD,CAQlBA,YAAmC,IAAK,EAA1B,GAAAkB,gBAAA,CAA8B,CAAC,KAAD,CAAQ,OAAR,CAAiB,MAAjB,CAAyB,KAAzB,CAAgC,KAAhC,CAA9B,CAAuEA,gBARnE,CASlBZ,WAAaM,IAAAN,WACba,iBAAAA,CAAeP,IAAAO,aAVG,KAWlBC,YAAcR,IAAAQ,YAXI,CAYlBC,sBAAwBT,IAAAS,sBACxBC,KAAAA,CAAsBV,IAAAU,oBAE1B,IAAI,CAACT,UAAL,CAAiB,KAAUU,MAAJ,CAAU,2CAAV,CAAN,CAEjB,GAAI,CAACxB,YAAL,EAAqB,CAACO,UAAtB,CACE,KAAUiB,MAAJ,CAAU,iFAAV,CAAN;AAGF,GAAIjB,UAAJ,EAAkB,CAACkB,KAAAC,QAAA,CAAcnB,UAAd,CAAnB,CACE,KAAUiB,MAAJ,CAAU,6CAAV,CAAN,CAGF,GAAI,CAACC,KAAAC,QAAA,CAAczB,WAAd,CAAL,CACE,KAAUuB,MAAJ,CAAU,8CAAV,CAAN,CAhEF,IAAIG,eAAiB,EAsEkBpB,WArEvC,EAAgBoB,cAAAC,KAAA,CAAoBtB,uBAAA,CAqEGC,UArEH,CAApB,CAqESP,aAnEzB,EACE2B,cAAAC,KAAA,CAAoB7B,sBAAA,CAkEGC,YAlEH,CAkE6BC,WAlE7B,CAApB,CAGF,aAAA,CAAO0B,cAAAtB,KAAA,CAAoB,IAApB,CA2EP,OAAOwB,KAAAC,MAAA,CAAWD,IAAAE,UAAA,CAfQC,CACxB,aAAc,CACZlB,WAAYA,UADA,CAEZmB,IAAK,YAFO,CAGZb,aAAcA,gBAHF;AAIZL,YAAaA,WAJD,CAKZC,UAAWA,SALC,CAMZC,YAAaA,WAND,CAOZC,WAAYA,UAPA,CAQZG,YAAaA,WARD,CASZC,sBAAuBA,qBATX,CAUZC,oBAAqBA,IAVT,CADUS,CAeR,CAAX,CA5Ce,CAiDxBnC,OAAAC,QAAA,CAAiBA,OAAAa,QA5G4F;",
"sources":["node_modules/polished/lib/mixins/fontFace.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$polished$lib$mixins$fontFace\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction generateFileReferences(fontFilePath, fileFormats) {\n  var fileFontReferences = fileFormats.map(function (format) {\n    return \"url(\\\"\" + fontFilePath + \".\" + format + \"\\\")\";\n  });\n  return fileFontReferences.join(', ');\n}\n\nfunction generateLocalReferences(localFonts) {\n  var localFontReferences = localFonts.map(function (font) {\n    return \"local(\\\"\" + font + \"\\\")\";\n  });\n  return localFontReferences.join(', ');\n}\n\nfunction generateSources(fontFilePath, localFonts, fileFormats) {\n  var fontReferences = [];\n  if (localFonts) fontReferences.push(generateLocalReferences(localFonts));\n\n  if (fontFilePath) {\n    fontReferences.push(generateFileReferences(fontFilePath, fileFormats));\n  }\n\n  return fontReferences.join(', ');\n}\n/**\n * CSS for a @font-face declaration.\n *\n * @example\n * // Styles as object basic usage\n * const styles = {\n *    ...fontFace({\n *      'fontFamily': 'Sans-Pro',\n *      'fontFilePath': 'path/to/file'\n *    })\n * }\n *\n * // styled-components basic usage\n * const GlobalStyle = createGlobalStyle`${\n *   fontFace({\n *     'fontFamily': 'Sans-Pro',\n *     'fontFilePath': 'path/to/file'\n *   }\n * )}`\n *\n * // CSS as JS Output\n *\n * '@font-face': {\n *   'fontFamily': 'Sans-Pro',\n *   'src': 'url(\"path/to/file.eot\"), url(\"path/to/file.woff2\"), url(\"path/to/file.woff\"), url(\"path/to/file.ttf\"), url(\"path/to/file.svg\")',\n * }\n */\n\n\nfunction fontFace(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontFilePath = _ref.fontFilePath,\n      fontStretch = _ref.fontStretch,\n      fontStyle = _ref.fontStyle,\n      fontVariant = _ref.fontVariant,\n      fontWeight = _ref.fontWeight,\n      _ref$fileFormats = _ref.fileFormats,\n      fileFormats = _ref$fileFormats === void 0 ? ['eot', 'woff2', 'woff', 'ttf', 'svg'] : _ref$fileFormats,\n      localFonts = _ref.localFonts,\n      unicodeRange = _ref.unicodeRange,\n      fontDisplay = _ref.fontDisplay,\n      fontVariationSettings = _ref.fontVariationSettings,\n      fontFeatureSettings = _ref.fontFeatureSettings;\n  // Error Handling\n  if (!fontFamily) throw new Error('fontFace expects a name of a font-family.');\n\n  if (!fontFilePath && !localFonts) {\n    throw new Error('fontFace expects either the path to the font file(s) or a name of a local copy.');\n  }\n\n  if (localFonts && !Array.isArray(localFonts)) {\n    throw new Error('fontFace expects localFonts to be an array.');\n  }\n\n  if (!Array.isArray(fileFormats)) {\n    throw new Error('fontFace expects fileFormats to be an array.');\n  }\n\n  var fontFaceDeclaration = {\n    '@font-face': {\n      fontFamily: fontFamily,\n      src: generateSources(fontFilePath, localFonts, fileFormats),\n      unicodeRange: unicodeRange,\n      fontStretch: fontStretch,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontDisplay: fontDisplay,\n      fontVariationSettings: fontVariationSettings,\n      fontFeatureSettings: fontFeatureSettings\n    } // Removes undefined fields for cleaner css object.\n\n  };\n  return JSON.parse(JSON.stringify(fontFaceDeclaration));\n}\n\nvar _default = fontFace;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","generateFileReferences","fontFilePath","fileFormats","map","fileFontReferences","format","join","generateLocalReferences","localFonts","localFontReferences","font","__esModule","default","fontFace","_ref","fontFamily","fontStretch","fontStyle","fontVariant","fontWeight","_ref$fileFormats","unicodeRange","fontDisplay","fontVariationSettings","fontFeatureSettings","Error","Array","isArray","fontReferences","push","JSON","parse","stringify","fontFaceDeclaration","src"]
}
