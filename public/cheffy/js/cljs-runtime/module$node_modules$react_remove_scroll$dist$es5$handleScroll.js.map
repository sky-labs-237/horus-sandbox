{
"version":3,
"file":"module$node_modules$react_remove_scroll$dist$es5$handleScroll.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAMAH,QAAAI,aAAA,CAAuBC,QAAS,CAACC,SAAD,CAAYC,KAAZ,CAAmBC,WAAnB,CAAgC,CAExDC,KAAAA,CAASF,KAAAE,OACb,KAAIC,aAAeJ,SAAAK,SAAA,CAAmBF,KAAnB,CAAnB,CACIG,mBAAqB,CAAA,CADzB,CAEIC,gBAA0B,CAA1BA,CAJQL,WAEZ,CAGIM,gBAAkB,CAHtB,CAIIC,mBAAqB,CACzB,GAAG,CAAA,IACKC,UAAYP,KAAAO,UADjB,CAEKC,cAD6CR,KAAAS,aAC7CD,CADiFR,KAAAU,aACjFF,CAA8CD,SAClD,IAAIA,SAAJ,EAAiBC,aAAjB,CAAgC,CAfpC,IAAIG;AAASC,MAAAC,iBAAA,CAgBsBb,KAhBtB,CACgB,SAerB,GAfAW,MAAAG,UAeA,EAdFH,MAAAG,UAcE,GAdmBH,MAAAI,UAcnB,EAd4D,SAc5D,GAduCJ,MAAAG,UAcvC,GACIT,eACA,EADmBG,aACnB,CAAAF,kBAAA,EAAsBC,SAF1B,CAD4B,CAMhCP,KAAA,CAASA,KAAAgB,WATV,CAAH,MAUU,CAACf,YAVX,EAU2BD,KAV3B,GAUsCiB,QAAAC,KAVtC,EAWKjB,YAXL,GAWsBJ,SAAAK,SAAA,CAAmBF,KAAnB,CAXtB,EAWoDH,SAXpD,GAWkEG,KAXlE,EAYII,gBAAJ,EAnBYL,WAmBZ,CAA+BM,eAA/B,CACIF,kBADJ,CACyB,CAAA,CADzB,CAGS,CAACC,eAHV,EAG6B,CAtBjBL,WAmBZ,CAGsCO,kBAHtC,GAIIH,kBAJJ,CAIyB,CAAA,CAJzB,CAMA,OAAOA,mBA1BqD,CAR0D;",
"sources":["node_modules/react-remove-scroll/dist/es5/handleScroll.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_remove_scroll$dist$es5$handleScroll\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar elementCouldBeScrolled = function (node) {\n    var styles = window.getComputedStyle(node);\n    return (styles.overflowY !== 'hidden' &&\n        !(styles.overflowY === styles.overflowX && styles.overflowY === 'visible'));\n};\nexports.handleScroll = function (endTarget, event, sourceDelta) {\n    var delta = sourceDelta;\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var scrollTop = target.scrollTop, scrollHeight = target.scrollHeight, clientHeight = target.clientHeight;\n        var elementScroll = scrollHeight - clientHeight - scrollTop;\n        if (scrollTop || elementScroll) {\n            if (elementCouldBeScrolled(target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += scrollTop;\n            }\n        }\n        target = target.parentNode;\n    } while ((!targetInLock && target !== document.body) ||\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    if (isDeltaPositive && delta > availableScroll) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive && -delta > availableScrollTop) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","handleScroll","exports.handleScroll","endTarget","event","sourceDelta","target","targetInLock","contains","shouldCancelScroll","isDeltaPositive","availableScroll","availableScrollTop","scrollTop","elementScroll","scrollHeight","clientHeight","styles","window","getComputedStyle","overflowY","overflowX","parentNode","document","body"]
}
