{"version":3,"sources":["cheffy_test.cljs"],"mappings":"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","names":["cheffy-test/styles","cheffy-test/ComponentWithStyles-hx-wrapped","props__26868__auto__","maybe-ref__26869__auto__","vec__27241","hx.react/props->clj","map__27244","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","hx.react/parse-body","goog/DEBUG","goog.object/set","cheffy-test/ComponentWithStyles","classes","fexpr__27246","js/module$node_modules$$material_ui$core$styles$index.withStyles","cheffy-test/my-component-mui-hx-wrapped","vec__27248","map__27251","cheffy-test/my-component-mui","fexpr__27253","js/module$node_modules$$smooth_ui$core_sc$dist$smooth_ui_core_sc_cjs.Button","vec__27255","cheffy-test/my-component-sui","_","vec__27258","state","dispatch","hx.hooks/useContext","cheffy.state/app-state","js/module$node_modules$$smooth_ui$core_sc$dist$smooth_ui_core_sc_cjs.Normalize","js/module$node_modules$$smooth_ui$core_sc$dist$smooth_ui_core_sc_cjs.ThemeProvider","cheffy.theme/cheffy-theme","G__27261","vec__27263","cheffy-test/PrintState","vec__27266","cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic","vec__27270","cheffy-test/PrintDbConsumer","vec__27273","map__27276","foo","db"],"sourcesContent":["(ns cheffy-test\n  (:require   [hx.react :as hx :refer [defnc]]\n              [hx.hooks :as hooks]\n              [hx.hooks.alpha :as alpha]\n              [cheffy.state :refer [app-state state-reducer]]\n              [cheffy.theme :refer [cheffy-theme]]\n              [cheffy.db :refer [initial-app-db]]\n              [\"@material-ui/core/styles\" :refer [createMuiTheme withStyles]]\n              [\"@smooth-ui/core-sc\" :refer [Normalize ThemeProvider Box Button]]))\n\n(def styles #js {:root #js {:backgroundColor \"red\"}})\n\n(defnc ComponentWithStyles [{:keys [classes]}]\n       {:wrap [((withStyles styles))]}\n       [:div {:class (.-root classes)} \"testing a commosent with styles\"])\n\n(defnc my-component-mui [{:keys [classes]}]\n       {:wrap [((withStyles styles))]}\n       [:<>\n        ;[Normalize]\n        ;[ThemeProvider {:theme theme}\n        ;[unstable_Box {:color \"blue\"} \"This a blue box\"]\n        [:div {:class (.-root classes)} \"kjkjjgjgjgg\"\n         [Button {:color \"primary\"} \"primary\"]]])\n         ;[Button  \"hello\"]]])\n(defnc my-component-sui [_]\n       (let [[state dispatch] (hooks/useContext app-state)]\n         [:<>\n          [Normalize]\n          [ThemeProvider {:theme cheffy-theme}\n           [Button {:onClick #(dispatch [:foo/load])} \"hello cheffy\"]]]))\n\n(defnc PrintState [_]\n       (let [[state] (hooks/useContext app-state)]\n         [:pre (prn-str (:foo state))]))\n\n(defnc PrintDbConsumer [_]\n       (let [[state dispatch] (hooks/useContext app-state)\n             {:keys [foo db]} state]\n         [:<>\n          [:div \"Initial state: \" (prn-str state)]]))\n"]}